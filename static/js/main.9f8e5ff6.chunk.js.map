{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sessionTimer","breakTimer","App","state","breakLength","sessionLength","timeLeft","currently","timerOn","minSession","minBreak","sec","setTimeLeft","bind","min","this","setState","String","clearInterval","document","getElementById","play","setInterval","breakFunc","sessionFunc","id","currSession","currBreak","pauseTimer","Number","substring","audio","pause","currentTime","className","class","onClick","handleClick","hidden","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9f8e5ff6.chunk.js","sourcesContent":["import React from \"react\";\nimport timerFuncs from \"./timer\";\n\nvar sessionTimer;\nvar breakTimer;\nvar breakFunc;\nvar sessionFunc;\n// var startedBreak;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timeLeft: \"25:00\",\n      currently: \"Session\",\n      timerOn: false\n    };\n\n    this.minSession = this.state.sessionLength;\n    this.minBreak = this.state.breakLength;\n    this.sec = 0;\n    this.setTimeLeft = this.setTimeLeft.bind(this);\n  }\n  setTimeLeft(min, sec) {\n    if (sec < 10) {\n      if (min < 10) {\n        this.setState({\n          timeLeft: \"0\" + String(min) + \":0\" + String(sec)\n        });\n      } else {\n        this.setState({\n          timeLeft: String(min) + \":0\" + String(sec)\n        });\n      }\n    } else if (min < 10) {\n      this.setState({\n        timeLeft: \"0\" + String(min) + \":\" + String(sec)\n      });\n    } else {\n      this.setState({\n        timeLeft: String(min) + \":\" + String(sec)\n      });\n    }\n  }\n  sessionFunc(sessionLength, breakLength) {\n    if (this.minSession === 0 && this.sec === 0) {\n      clearInterval(sessionTimer);\n      // would sound the alarm right here and maybe call breakTimer?\n      var audio = document.getElementById(\"beep\");\n      audio.play();\n      this.minBreak = breakLength;\n      this.setState({\n        currently: \"Break\"\n      });\n      this.setTimeLeft(this.minBreak, 0);\n      breakTimer = setInterval(\n        () => this.breakFunc(sessionLength, breakLength),\n        1000\n      );\n      return;\n    }\n    if (this.sec === 0) {\n      this.sec = 59;\n      this.minSession -= 1;\n    } else {\n      this.sec -= 1;\n    }\n    this.setTimeLeft(this.minSession, this.sec);\n  }\n\n  breakFunc(sessionLength, breakLength) {\n    if (this.minBreak === 0 && this.sec === 0) {\n      clearInterval(breakTimer);\n      // would sound the alarm right here and maybe call breakTimer?\n      var audio = document.getElementById(\"beep\");\n      audio.play();\n      this.minSession = sessionLength;\n      this.setState({\n        currently: \"Session\"\n      });\n      this.setTimeLeft(this.minSession, 0);\n      sessionTimer = setInterval(\n        () => this.sessionFunc(sessionLength, breakLength),\n        1000\n      );\n      return;\n    }\n    if (this.sec === 0) {\n      this.sec = 59;\n      this.minBreak -= 1;\n    } else {\n      this.sec -= 1;\n    }\n    this.setTimeLeft(this.minBreak, this.sec);\n  }\n\n  pauseTimer() {\n    this.setState({\n      timerOn: false\n    })\n    clearInterval(sessionTimer);\n    clearInterval(breakTimer);\n  }\n\n  handleClick(id) {\n    const currSession = this.state.sessionLength;\n    const currBreak = this.state.breakLength;\n    const timerOn = this.state.timerOn;\n    const currently = this.state.currently;\n    switch (id) {\n      case \"start\":\n        if (timerOn) {\n          this.pauseTimer();\n          return;\n        }\n        this.setState({\n          timerOn: true\n        });\n        if (currently === \"Session\") {\n          this.minBreak = currBreak;\n          this.minSession =Number(this.state.timeLeft.substring(0, 2));\n          sessionTimer = setInterval(\n          () => this.sessionFunc(currSession, currBreak),\n          1000\n        );\n        } else {\n          this.minBreak = Number(this.state.timeLeft.substring(0, 2));\n          this.minSession = currSession;\n          breakTimer = setInterval(\n            () => this.breakFunc(currSession, currBreak),\n            1000\n          );\n        }\n        \n        break;\n      case \"pause\":\n        this.pauseTimer();\n        break;\n      case \"reset\":\n        this.pauseTimer();\n        this.setState({\n          sessionLength: 25,\n          breakLength: 5,\n          currently: \"Session\",\n          timerOn: false,\n          timeLeft: \"25:00\"\n        });\n        this.sec = 0;\n        var audio = document.getElementById(\"beep\");\n        audio.pause();\n        audio.currentTime = 0;\n        break;\n      case \"session-decrement\":\n        if (currSession > 1 && !timerOn) {\n          this.setState({\n            sessionLength: currSession - 1\n          });\n          if (currently === \"Session\") {\n            this.sec = 0;\n            this.setTimeLeft(currSession - 1, 0);\n          }\n          return;\n        }\n        break;\n      case \"session-increment\":\n        if (currSession < 60 && !timerOn) {\n          this.setState({\n            sessionLength: currSession + 1\n          });\n          if (currently === \"Session\") {\n            this.sec = 0;\n            this.setTimeLeft(currSession + 1, 0);\n          }        \n          return;\n        }\n        break;\n      case \"break-decrement\":\n        if (currBreak > 1 && !timerOn) {\n          this.setState({\n            breakLength: currBreak - 1\n          });\n          if (currently === \"Break\") {\n            this.sec = 0;\n            this.setTimeLeft(currBreak - 1, 0);\n          }\n          return;\n        }\n        break;\n      case \"break-increment\":\n        if (currBreak < 60 && !timerOn) {\n          this.setState({\n            breakLength: currBreak + 1\n          });\n          if (currently === \"Break\") {\n            this.sec = 0;\n            this.setTimeLeft(currBreak + 1, 0);\n          }\n          return;\n        }\n        break;\n\n      default:\n        return;\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>Focus Timer</header>\n        <div id=\"main-container\">\n          <div id=\"session-container\" className=\"session-break\">\n            <div id=\"session-label\" className=\"label\">\n              Session Length\n            </div>\n            <div className=\"inc-dec-container\">\n              {\" \"}\n              <button\n                id=\"session-decrement\"\n                class=\"inc-dec-button\"\n                onClick={() => this.handleClick(\"session-decrement\")}\n              >\n                <i class=\"fas fa-minus\"></i>\n              </button>\n              <div id=\"session-length\" className=\"length\">\n                {this.state.sessionLength}\n              </div>\n              <button\n                id=\"session-increment\"\n                class=\"inc-dec-button\"\n                onClick={() => this.handleClick(\"session-increment\")}\n              >\n                <i class=\"fas fa-plus\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"timer-container\">\n            <div id=\"timer-label\">{this.state.currently}</div>\n            <div id=\"time-left\">{this.state.timeLeft}</div>\n          </div>\n          <div id=\"break-container\" className=\"session-break\">\n            <div id=\"break-label\" className=\"label\">\n              Break Length\n            </div>\n            <div className=\"inc-dec-container\">\n              <button\n                id=\"break-decrement\"\n                class=\"inc-dec-button\"\n                onClick={() => this.handleClick(\"break-decrement\")}\n              >\n                <i class=\"fas fa-minus\"></i>\n              </button>\n              <div id=\"break-length\" className=\"length\">\n                {this.state.breakLength}\n              </div>\n              <button\n                id=\"break-increment\"\n                class=\"inc-dec-button\"\n                onClick={() => this.handleClick(\"break-increment\")}\n              >\n                <i class=\"fas fa-plus\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div id=\"timer-controls\">\n          <button\n            id=\"start_stop\"\n            className=\"timer-btn\"\n            onClick={() => this.handleClick(\"start\")}\n          >\n            <i class=\"fas fa-play\"></i>\n          </button>\n          <button\n            id=\"pause\"\n            className=\"timer-btn\"\n            onClick={() => this.handleClick(\"pause\")}\n          >\n            <i class=\"fas fa-pause\"></i>\n          </button>\n          <button\n            id=\"reset\"\n            className=\"timer-btn\"\n            onClick={() => this.handleClick(\"reset\")}\n          >\n            <i class=\"fas fa-redo\"></i>\n          </button>\n        </div>\n        <audio id=\"beep\" hidden=\"true\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}